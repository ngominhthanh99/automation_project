{"name": "test_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff72805e935+77845]\n\tGetHandleVerifier [0x0x7ff72805e990+77936]\n\t(No symbol) [0x0x7ff727e19cda]\n\t(No symbol) [0x0x7ff727e706aa]\n\t(No symbol) [0x0x7ff727e7095c]\n\t(No symbol) [0x0x7ff727ec3d07]\n\t(No symbol) [0x0x7ff727e9890f]\n\t(No symbol) [0x0x7ff727ec0b07]\n\t(No symbol) [0x0x7ff727e986a3]\n\t(No symbol) [0x0x7ff727e61791]\n\t(No symbol) [0x0x7ff727e62523]\n\tGetHandleVerifier [0x0x7ff72833684d+3059501]\n\tGetHandleVerifier [0x0x7ff728330c0d+3035885]\n\tGetHandleVerifier [0x0x7ff728350400+3164896]\n\tGetHandleVerifier [0x0x7ff728078c3e+185118]\n\tGetHandleVerifier [0x0x7ff72808054f+216111]\n\tGetHandleVerifier [0x0x7ff7280672e4+113092]\n\tGetHandleVerifier [0x0x7ff728067499+113529]\n\tGetHandleVerifier [0x0x7ff72804e298+10616]\n\tBaseThreadInitThunk [0x0x7ffdc89b7374+20]\n\tRtlUserThreadStart [0x0x7ffdc9c5cc91+33]", "trace": "self = <tests.test_checkout.TestCheckout object at 0x000002526566EAD0>\n\n    def test_checkout(self):\n    \n        #Login first\n        login = LoginPage(self.driver)\n        login.login(ConfigReader.get_username(), ConfigReader.get_password())\n    \n        #checkout\n        inventory = InventoryPage(self.driver)\n        cart = CartPage(self.driver)\n        checkout = CheckoutPage(self.driver)\n    \n        #add 3 produtc\n        inventory.add_products(3)\n    \n        #click vao cart\n        inventory.click_cart()\n    \n        #click vao checkout\n>       cart.click_checkout()\n\ntests\\test_checkout.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\cart_page.py:8: in click_checkout\n    self.click(self.checkout_btn)\nbase\\base_page.py:16: in click\n    self.wait_for_element(locator).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbase\\base_page.py:12: in wait_for_element\n    return WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"75dac7234a313ada94a62fc3fce0e80a\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000025265713E20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff72805e935+77845]\nE       \tGetHandleVerifier [0x0x7ff72805e990+77936]\nE       \t(No symbol) [0x0x7ff727e19cda]\nE       \t(No symbol) [0x0x7ff727e706aa]\nE       \t(No symbol) [0x0x7ff727e7095c]\nE       \t(No symbol) [0x0x7ff727ec3d07]\nE       \t(No symbol) [0x0x7ff727e9890f]\nE       \t(No symbol) [0x0x7ff727ec0b07]\nE       \t(No symbol) [0x0x7ff727e986a3]\nE       \t(No symbol) [0x0x7ff727e61791]\nE       \t(No symbol) [0x0x7ff727e62523]\nE       \tGetHandleVerifier [0x0x7ff72833684d+3059501]\nE       \tGetHandleVerifier [0x0x7ff728330c0d+3035885]\nE       \tGetHandleVerifier [0x0x7ff728350400+3164896]\nE       \tGetHandleVerifier [0x0x7ff728078c3e+185118]\nE       \tGetHandleVerifier [0x0x7ff72808054f+216111]\nE       \tGetHandleVerifier [0x0x7ff7280672e4+113092]\nE       \tGetHandleVerifier [0x0x7ff728067499+113529]\nE       \tGetHandleVerifier [0x0x7ff72804e298+10616]\nE       \tBaseThreadInitThunk [0x0x7ffdc89b7374+20]\nE       \tRtlUserThreadStart [0x0x7ffdc9c5cc91+33]\n\nC:\\Users\\dorem\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "Ensure user can complete checkout process", "attachments": [{"name": "screenshot_on_failure", "source": "60c69c0e-0119-4f71-b166-033e75b1277b-attachment.png", "type": "image/png"}], "start": 1753597048857, "stop": 1753597059435, "uuid": "c6a155b2-dd84-45ee-84f8-a1e59a91a75b", "historyId": "fcde31bba86e11b63283d065184938a5", "testCaseId": "fcde31bba86e11b63283d065184938a5", "fullName": "tests.test_checkout.TestCheckout#test_checkout", "labels": [{"name": "suite", "value": "Checkout Tests"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestCheckout"}, {"name": "host", "value": "Kev"}, {"name": "thread", "value": "21252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_checkout"}], "titlePath": ["tests", "test_checkout.py", "TestCheckout"]}